# data file for the Fltk User Interface Designer (fluid)
version 1.0107 
header_name {.h} 
code_name {.cxx}
class PreprocessingUI {open : {private PreprocessingUIBase}
} {
  Function {MakeWindow()} {open
  } {
    Fl_Window m_WinInOut {
      label {Intensity Region Filter} open
      xywh {988 69 399 350} type Double box PLASTIC_DOWN_BOX
      code0 {\#include "PreprocessingUIBase.h"} non_modal visible
    } {
      Fl_Value_Slider m_InThresholdSteepness {
        label Smoothness
        callback {o->take_focus();
this->OnThresholdSettingsChange();}
        tooltip {Set the smoothness of the speed function} xywh {25 265 200 20} type Horizontal color 51 selection_color 197 labelsize 12 align 5 step 0.01 value 0.25
      }
      Fl_Group m_GrpThresholdDirection {
        label {Threshold direction:} open
        xywh {250 175 135 70} labelsize 12 align 5
      } {
        Fl_Round_Button m_RadioThresholdAbove {
          callback {this->OnThresholdDirectionChange();}
          xywh {260 200 120 20} type Radio down_box ROUND_DOWN_BOX
        }
        Fl_Round_Button m_RadioThresholdBelow {
          callback {this->OnThresholdDirectionChange();}
          tooltip {Select this for a one-sided threshold, where values with low intensities are treated as 'background'} xywh {260 180 120 20} type Radio down_box ROUND_DOWN_BOX
        }
        Fl_Round_Button m_RadioThresholdBoth {
          callback {this->OnThresholdDirectionChange();}
          tooltip {Select this for a two-sided threshold, where values between the lower and upper thresholds are considered 'object' and values outside the thresholds are 'background'} xywh {260 220 120 20} type Radio down_box ROUND_DOWN_BOX value 1
        }
        Fl_Group {} {
          label Below open
          xywh {275 180 80 20} labelsize 12 align 20
        } {}
        Fl_Group {} {
          label Above open
          tooltip {Select this for a one-sided threshold, where values with high intensities are treated as 'background'} xywh {275 200 80 20} labelsize 12 align 20
        } {}
        Fl_Group {} {
          label {Below and Above} open
          xywh {275 220 105 20} labelsize 12 align 20
        } {}
      }
      Fl_Button m_BtnThresholdOk {
        label Okay
        callback {this->OnThresholdOk();}
        tooltip {Accept the speed image and close the window} xywh {170 300 65 25} box PLASTIC_UP_BOX down_box PLASTIC_DOWN_BOX shortcut 0x1ff0d color 180 selection_color 134 labelfont 1 labelsize 12
      }
      Fl_Button m_BtnThresholdApply {
        label {&Apply}
        callback {this->OnThresholdApply();}
        tooltip {Accept the speed image, but do not close the window} xywh {245 300 65 25} box PLASTIC_UP_BOX down_box PLASTIC_DOWN_BOX shortcut 0x80061 color 180 selection_color 134 labelsize 12
      }
      Fl_Button m_BtnThresholdClose {
        label Close
        callback {this->OnThresholdClose();} selected
        xywh {320 300 65 25} box PLASTIC_UP_BOX down_box PLASTIC_DOWN_BOX shortcut 0xff1b color 180 selection_color 134 labelsize 12
      }
      Fl_Check_Button m_InThresholdPreview {
        label {Preview result}
        callback {this->OnThresholdPreviewChange();}
        tooltip {Select this to have the main program windows update automatically as you change threshold parameters} xywh {250 245 105 25} down_box DOWN_BOX value 1 labelsize 12
      }
      Fl_Check_Button m_InThresholdOverlay {
        label {Combined display}
        callback {this->OnThresholdOverlayChange();}
        tooltip {When this option is selected, the voxels where the speed function is positive will be overlaid with the current segmentation label} xywh {250 265 125 25} down_box DOWN_BOX labelsize 12 align 148
      }
      Fl_Group {} {
        label {The thresholding function} open
        xywh {25 15 350 120} box BORDER_FRAME color 0 labelsize 11 align 2
      } {
        Fl_Box m_BoxThresholdFunctionPlot {
          tooltip {This window displays a mapping from the input image intensity to the 'speed' function. The mapping is controlled by setting an upper and lower threshold. Intensities falling between the thresholds are mapped to +1 and intensities outside the threshold are set to -1. The mapping is fuzzy and its softness is controlled by the smoothness parameter} xywh {25 15 350 120}
          class FunctionPlot2DBox
        }
      }
      Fl_Slider m_OutThresholdProgress {
        xywh {0 335 400 15} type {Horz Fill} selection_color 180 labelsize 12 align 0 value 1 deactivate
      }
      Fl_Value_Input m_InLowerThresholdText {
        label {Lower threshold}
        callback {this->OnThresholdLowerChange(o->value());}
        tooltip {Set the threshold below which the speed function will be negative} xywh {25 175 40 20} color 51 labelsize 12 align 5 maximum 100 step 0.01 textsize 10
      }
      Fl_Slider m_InLowerThreshold {
        callback {o->take_focus();
this->OnThresholdLowerChange(o->value());}
        tooltip {Set the threshold below which the speed function will be negative} xywh {70 175 155 20} type Horizontal color 51 selection_color 197 value 0.01
      }
      Fl_Value_Input m_InUpperThresholdText {
        label {Upper threshold}
        callback {this->OnThresholdUpperChange(o->value());}
        tooltip {Set the threshold above which the speed function will be negative} xywh {25 220 40 20} color 51 labelsize 12 align 5 maximum 100 step 0.01 textsize 10
      }
      Fl_Slider m_InUpperThreshold {
        callback {o->take_focus();
this->OnThresholdUpperChange(o->value());}
        tooltip {Set the threshold above which the speed function will be negative} xywh {70 220 155 20} type Horizontal color 51 selection_color 197 value 0.01
      }
    }
    Fl_Window m_WinEdge {
      label {Image Edge Filter} open
      xywh {732 549 400 351} type Double box PLASTIC_DOWN_BOX non_modal visible
    } {
      Fl_Value_Slider m_InEdgeScale {
        label {Scale of Gaussian blurring (sigma)}
        callback {o->take_focus();
this->OnEdgeSettingsChange();}
        tooltip {Set the scale of Gaussian blurring applied to the image before computing the gradient magnitude (and the speed function). Use smaller values to emphasize finer edges in the input image, and use larger values if you want the active contour evolution to be driven by the strongest edges.} xywh {25 175 225 20} type Horizontal color 51 selection_color 197 labelsize 12 align 5 minimum 0.1 maximum 3 step 0.1 value 1
      }
      Fl_Value_Slider m_InEdgeKappa {
        label {Edge contrast (kappa)}
        callback {o->take_focus();
this->OnEdgeSettingsChange();}
        tooltip {This parameter affects the shape of the mapping between gradient magnitude and the speed function} xywh {25 220 225 20} type Horizontal color 51 selection_color 197 labelsize 12 align 5 minimum 0.002 maximum 0.2 step 0.002 value 0.1
      }
      Fl_Value_Slider m_InEdgeExponent {
        label {Edge mapping exponent}
        callback {o->take_focus();
this->OnEdgeSettingsChange();}
        tooltip {This parameter affects the shape of the mapping between gradient magnitude and the speed function} xywh {25 265 225 20} type Horizontal color 51 selection_color 197 labelsize 12 align 5 minimum 1 maximum 3 step 0.05 value 2
      }
      Fl_Button m_BtnEdgeOK {
        label Okay
        callback {this->OnEdgeOk();}
        tooltip {Accept the speed image and close the window} xywh {170 300 65 25} box PLASTIC_UP_BOX down_box PLASTIC_DOWN_BOX shortcut 0x1ff0d color 180 selection_color 134 labelfont 1 labelsize 12
      }
      Fl_Button m_BtnEdgeApply {
        label {&Apply}
        callback {this->OnEdgeApply();}
        tooltip {Accept the speed image, but do not close the window} xywh {245 300 65 25} box PLASTIC_UP_BOX down_box PLASTIC_DOWN_BOX shortcut 0x80061 color 180 selection_color 134 labelsize 12
      }
      Fl_Button m_BtnEdgeClose {
        label Close
        callback {this->OnEdgeClose();}
        xywh {320 300 65 25} box PLASTIC_UP_BOX down_box PLASTIC_DOWN_BOX shortcut 0xff1b color 180 selection_color 134 labelsize 12
      }
      Fl_Check_Button m_InEdgePreview {
        label {Preview result}
        callback {this->OnEdgePreviewChange();}
        tooltip {Select this to have the main program windows update automatically as you change threshold parameters} xywh {270 170 105 25} down_box DOWN_BOX labelsize 12
      }
      Fl_Group {} {
        label {The function g() applied to the gradient magnitude image} open
        xywh {25 15 350 120} box BORDER_FRAME color 0 labelsize 11 align 2
      } {
        Fl_Box m_BoxEdgeFunctionPlot {
          tooltip {This window displays a mapping between gradient magnitude of the input image and  the 'speed' function. The 'speed' function should be close to 0 near edges in the input image (where gradient magnitude is high), and it should be close to 1 at regions where image intensity is nearly constant (gradient magnitude close to 0). Gradient magnitude of the image is computed at a scale (sigma). At larger scales, small fine edges are smoothed out.} xywh {25 15 350 120} box BORDER_BOX color 7 align 25
          class FunctionPlot2DBox
        }
      }
      Fl_Slider m_OutEdgeProgress {
        xywh {0 335 400 15} type {Horz Fill} selection_color 180 labelsize 12 align 0 value 1 deactivate
      }
    }
  }
} 
